import os
from datetime import datetime
from markdown_pdf import MarkdownPdf, Section

def create_dpp_pdf(topic_name: str, questions: list, instrucions: str,output_dir: str = "dpp_pdfs",) -> str:
    """
    Creates a beautiful DPP (Daily Practice Problems) PDF document using markdown-pdf.
    
    Args:
        topic_name (str): The topic name for the DPP
        questions (list): List of questions to include in the DPP
        output_dir (str): Directory to save the PDF (default: "dpp_pdfs")
        
    Returns:
        str: Path to the created PDF file
    """
    
    # Create output directory if it doesn't exist
    os.makedirs(output_dir, exist_ok=True)
    
    # Generate filename with timestamp
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    filename = f"DPP_{topic_name.replace(' ', '_')}_{timestamp}.pdf"
    pdf_path = os.path.join(output_dir, filename)
    
    # Create markdown content
    md_content = f"""
# Daily Practice Problems

## Topic: {topic_name}

**Date:** {datetime.now().strftime('%B %d, %Y')}

---

### Instructions:
{instrucions}

---

## Questions:
"""
    
    # Add questions to markdown content
    for i, question in enumerate(questions, 1):
        md_content += f"\n{i}. {question}\n\n"
    
    # Add footer
    md_content += f"\n---\n*Generated by DPPify â€¢ {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}*"
    
    # Create PDF
    pdf = MarkdownPdf(toc_level=0)
    pdf.add_section(Section(md_content))
    pdf.save(pdf_path)
    
    return pdf_path